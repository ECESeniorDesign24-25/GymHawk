#include "arduino_secrets.h"
// // Code generated by Arduino IoT Cloud, DO NOT EDIT.

// #include <ArduinoIoTCloud.h>
// #include <Arduino_ConnectionHandler.h>

// const char DEVICE_LOGIN_NAME[]  = "656c7ef8-f559-43c8-8d51-9685b39e1ab7";

// const char SSID[]               = SECRET_SSID;    // Network SSID (name)
// const char PASS[]               = SECRET_OPTIONAL_PASS;    // Network password (use for WPA, or use as key for WEP)
// const char DEVICE_KEY[]  = SECRET_DEVICE_KEY;    // Secret device password

// void onMachineARateChange();
// void ond1BlueInUseChange();

// float machineARate;
// bool d1BlueInUse;

// void initProperties(){

//   ArduinoCloud.setBoardId(DEVICE_LOGIN_NAME);
//   ArduinoCloud.setSecretDeviceKey(DEVICE_KEY);
//   ArduinoCloud.addProperty(machineARate, READWRITE, ON_CHANGE, onMachineARateChange);
//   ArduinoCloud.addProperty(d1BlueInUse, READWRITE, ON_CHANGE, ond1BlueInUseChange);

// }

// WiFiConnectionHandler ArduinoIoTPreferredConnection(SSID, PASS);



/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/fe619885-ba9d-41d5-b4b2-c527b9ca6fb9 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  float d1BlueLat;
  float d1BlueLong;
  float d1BlueRate;
  int rmsCurrent;
  bool d1BlueInUse;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"


const long updateInterval = 10000;
unsigned long lastUpdateTime = 0;
int base = 14;
int current = 0;

void setup() {
  
  // power supply starting sequence
  delay(10000);
  pinMode(base, OUTPUT);
  digitalWrite(base, HIGH);
  delay(1000);
  digitalWrite(base,LOW);

  
  // Initialize serial and wait for port to open:
  Serial.begin(115200);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();

  int signal = 0;
}

void loop() {

  long runningTot = 0;
  for (int i=0; i<200; i++) {
    current = analogRead(A0);
    runningTot += current * current;
  }
  rmsCurrent = sqrt(runningTot/200);
  Serial.print(rmsCurrent);
  Serial.println();
  

  if (rmsCurrent>500) {
    d1BlueInUse = 1;
  }
  else {
    d1BlueInUse = 0;
  }
  
  ArduinoCloud.update();
  
  if (millis() - lastUpdateTime > updateInterval) {
    //d1BlueInUse = (random(2) == 1) ? true : false;
    Serial.print("d1BlueInUse updated to: ");
    Serial.println(d1BlueInUse);
    lastUpdateTime = millis();
  }
}

/*
  Since d1BlueInUse is READ_WRITE variable, ond1BlueInUseChange() is
  executed every time a new value is received from IoT Cloud.
*/
void ond1BlueInUseChange()  {
  // Add your code here to act upon d1BlueInUse change
}

void onMachineARateChange() {
  // add code
}







/*
  Since D1BlueInUse is READ_WRITE variable, onD1BlueInUseChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onD1BlueInUseChange()  {
  // Add your code here to act upon D1BlueInUse change
}

/*
  Since D1BlueRate is READ_WRITE variable, onD1BlueRateChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onD1BlueRateChange()  {
  // Add your code here to act upon D1BlueRate change
}

/*
  Since D1BlueGPS is READ_WRITE variable, onD1BlueGPSChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onD1BlueGPSChange()  {
  // Add your code here to act upon D1BlueGPS change
}


/*
  Since D1BlueLat is READ_WRITE variable, onD1BlueLatChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onD1BlueLatChange()  {
  // Add your code here to act upon D1BlueLat change
}

/*
  Since D1BlueLong is READ_WRITE variable, onD1BlueLongChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onD1BlueLongChange()  {
  // Add your code here to act upon D1BlueLong change
}


